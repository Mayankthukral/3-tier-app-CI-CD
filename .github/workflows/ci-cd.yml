name: 3-tier-app-CI/CD

on:
  push:
    branches:
      - testing 
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20'

      - name: Install frontend Dependencies
        run: |
          cd task-manager-frontend  
          ls | cat simplefile.txt
          npm install

      - name: Install backend Dependencies 
        run: |
          cd task-manager-backend 
          ls | cat simplefile.txt
          npm install          

      - name: Run backend unit Tests
        run: |
            cd task-manager-backend  
            echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" > .env 
            npm test
            
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUBTOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: 
            -Dsonar.organization=${{ secrets.SONARORGANIZATION}}
            -Dsonar.projectKey=${{ secrets.SONARPROJECT}}
            -Dsonar.sources=task-manager-backend,task-manager-frontend 
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./task-manager-frontend
          push: true
          tags: mayank7833/frontend:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./task-manager-backend
          push: true
          tags: mayank7833/backend:latest


      - name: Install and run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'mayank7833/frontend:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: HIGH,CRITICAL
          output: 'trivy-results-frontend.txt'

      - name: Install and run Trivy on backend image
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'mayank7833/backend:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: HIGH,CRITICAL
          output: 'trivy-results-backend.txt'

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v2
        with:
          name: trivy-results
          path: |
            trivy-results-frontend.txt
            trivy-results-backend.txt